 /*
Atividade do dia 02/10/2020

Implementar um sistema simples de atendimento com a oferta de 3 opções através de um seletor:

0. Sair
1. Gerar senha
2. Realizar atendimento
A opção 1 deverá incrementar o controle de senhas, gerando e enfileirando a senha gerada na fila "senhasGeradas"

A opção 2 deverá consumir a senha "da vez", exibindo-a na tela e enfileirando-a na fila "senhasAtendidas".

Sempre que o seletor for exibido, informar a quantidade de senhas ainda aguardando atendimento.

O programa só poderá ser encerrado quando a fila "senhasGeradas" estiver vazia. Ao encerrar, informar a quantidade de senhas atendidas.

*/
 
#include <iostream>
using namespace std;

struct No {
	int dado;
	struct No *prox;
};

struct Fila {
	No *ini;
	No *fim;
};

void mostrarEnderecos(Fila *f) {
	cout << "Fila->ini: " << f->ini << " e Fila-fim: " << f->fim << endl;
}

Fila* init() {
	Fila *f = new Fila;
	f->ini = NULL;
	f->fim = NULL;
	return f;
}

int isEmpty(Fila *f) {
	return (f->ini == NULL);
}

// Função para enfileirar um elemento na fila
void enqueue(Fila *f, float v) {
	No *no = new No;
	no->dado = v;
	no->prox = NULL;
	if (isEmpty(f)) {
		f->ini = no;
	}
	else
	{
		f->fim->prox = no;
	}
	f->fim = no;
}

// Função para desenfileirar um elemento da fila
float dequeue(Fila *f) {
	float ret;
	No *no = f->ini;
	ret = no->dado;
	f->ini = no->prox;
	if (f->ini == NULL) {
		f->fim = NULL;
	}
	free(no);
	return ret;
}

void print(Fila *f) {
	No *no;
	no = f->ini;
	while (no != NULL) {
		cout << no->dado << endl;
		no = no->prox;
	}
	cout << "-------------------------------------------------" << endl;
}

int count(Fila *f) {
	int qtde = 0;
	No *no;
	no = f->ini;
	while (no != NULL) {
		qtde++;
		no = no->prox;
	}
    return qtde;
}

void freeFila(Fila *f) {
	No *no = f->ini;
	while (no != NULL) {
		No *temp = no->prox;
		free(no);
		no = temp;
	}
	free(f);
}

int main(int argc, char** argv)
{
	int refazer = 1;
	int senha = 1;
	int option = 5;
	
	Fila *senhasGeradas;
	senhasGeradas = init();
	mostrarEnderecos(senhasGeradas);
	
	Fila *senhasAtendidas;
	senhasAtendidas = init();
	mostrarEnderecos(senhasAtendidas);
	
	
	cout << "Fila vazia: " << (isEmpty(senhasGeradas)?"Sim":"Nao") << endl;
	cout << "Qtde de nos: " << count(senhasGeradas) << endl;
	
	while (refazer == 1) {
			
		do {
			cout << endl <<  "-------------   Escolha uma opcao   -------------" << endl;
			cout << "Qntd de senhas aguardando atendimento: " << count(senhasGeradas) << endl;
			cout << "0. Sair" << endl;
			cout << "1. Gerar senha" << endl;
			cout << "2. Realizar atendimento" << endl << endl;
			cout << "Escolha: ";
			cin >> option; 
		} while (option <0 || option >2);
		cout << "-------------------------------------------------" << endl << endl;
		
		switch(option)
		{
			case 0: {
				if (count(senhasGeradas) == 0) {
					cout << "Senhas totais atendidas: " << count(senhasAtendidas) << endl;
					cout << "Saindo...";
					freeFila(senhasGeradas);  
					freeFila(senhasAtendidas); 
					return 0;
				} else {
					cout << "Ainda ha senhas a serem atendidas!" << endl;
				}
				
			}break;
		
			case 1:{
				enqueue(senhasGeradas, senha);
				cout << "Sua senha eh: " << senha << endl;
				senha++;
				
			} break;
		
		
			case 2: {

				if (count(senhasGeradas) == 0) {
					cout << "------------  NAO HA SENHAS NA FILA  ------------" << endl;
				} else {
					cout << "-----------    ATENDIMENTO EFETUADO   -----------" << endl;
					cout << "Senha atendida: " << senhasGeradas->ini->dado << endl << endl;
					cout << "-------------    SENHAS ATENDIDAS   -------------" << endl;
					enqueue(senhasAtendidas, senhasGeradas->ini->dado);
					print(senhasAtendidas);
					
					dequeue(senhasGeradas);
					
					if (count(senhasGeradas) > 0) {
						cout << endl << "-------------    SENHAS RESTANTES   -------------" << endl;
						print(senhasGeradas);
					}
				}
				
				
						
			} break;
		

		}
		
	}
	
	freeFila(senhasGeradas);
	
	return 0;
}
